/* eslint-disable import/no-cycle */
/* eslint-disable import/no-self-import */
/* eslint-disable no-use-before-define */
/* eslint-disable import/extensions */
import startTimer from './timer.js';
import openBlock from './open-block.js';
import flagSet from './flag-set.js';
import newGame from './new-game.js';
import click from './click.js';
import genMatrix from './generate-matrix.js';

export default function boxClick() {
  let flagStatus = false;
  let isMatrixSet = false;
  let isTimerRun = false;
  const items = document.querySelectorAll('.game__block');
  const flag = document.querySelector('.flag');
  newGame();
  items.forEach((item) => {
    item.addEventListener('click', (event) => {
      // –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–µ
      if (!item.classList.contains('game__block_opened') && !item.classList.contains('num') && !item.classList.contains('flag')) {
        click(false);
      }
      // –ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –º–∞—Ç—Ä–∏—Ü–µ
      const index = Array.from(items).indexOf(event.target);
      const row = Math.trunc(index / 10);
      const column = index % 10;
      // –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü—ã –µ—â–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞
      if (!isMatrixSet && !item.classList.contains('flag')) {
        genMatrix(10, row, column);
        isMatrixSet = true;
      }
      if (!isTimerRun) {
        // –∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ñ–ª–∞–≥
        startTimer();
        isTimerRun = true;
      }
      // –µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ —Ñ–ª–∞–≥
      if (item.classList.contains('flag')) {
        flag.innerHTML = 'üö©';
        flagStatus = !flagStatus;
        flagSet();
      }
      // –µ—Å–ª–∏ –Ω–µ —Ä–µ–∂–∏–º —Ñ–ª–∞–≥–∞
      if (!flagStatus) {
        flag.innerHTML = '‚õèÔ∏è';
        openBlock(row, column);
      }
    });
  });
}
